plugins {
	id 'idea'
}

dependencies {
	api project(':micrometer-tracing')
	api project(':micrometer-tracing-test')
	api project(':micrometer-tracing-reporter-wavefront')
	api platform(libs.micrometerBom)
	api 'io.micrometer:micrometer-core'
	api 'io.micrometer:micrometer-test'

	// Brave
	api project(':micrometer-tracing-bridge-brave')
	api 'io.zipkin.brave:brave'
	api 'io.zipkin.brave:brave-context-slf4j'
	api 'io.zipkin.brave:brave-instrumentation-http'
	api 'io.zipkin.brave:brave-tests'
	api libs.zipkinAws
	api 'io.zipkin.reporter2:zipkin-reporter-brave'

	// OTel
	api project(':micrometer-tracing-bridge-otel')
	api 'io.opentelemetry:opentelemetry-exporter-zipkin'
	api 'io.opentelemetry:opentelemetry-sdk-trace'
	api 'io.opentelemetry:opentelemetry-extension-trace-propagators'
	api 'io.opentelemetry:opentelemetry-sdk-testing'

	// Zipkin
	api platform(libs.zipkinReporterBom)
	api 'io.zipkin.zipkin2:zipkin'
	api 'io.zipkin.reporter2:zipkin-reporter'
	api 'io.zipkin.reporter2:zipkin-sender-urlconnection'
	api('io.zipkin.reporter2:zipkin-sender-kafka') {
		exclude group: 'org.apache.kafka', module: 'kafka-clients'
	}
	api('io.zipkin.reporter2:zipkin-sender-activemq-client') {
		exclude group: 'org.apache.activemq', module: 'activemq-client'
	}
	api('io.zipkin.reporter2:zipkin-sender-amqp-client') {
		exclude group: 'com.rabbitmq', module: 'amqp-client'
	}

	// Wavefront
	api libs.wavefrontReporter

	// Tests
	implementation(platform(libs.junitBom))
	implementation(libs.junitJupiter)

	// Tests for tests
	testImplementation(libs.assertj)
	testImplementation libs.springContext
	testImplementation libs.mockitoCore
	testImplementation libs.wiremock
	testImplementation libs.awaitility
	testImplementation libs.logback
	testImplementation platform(libs.reactorBom)
	testImplementation 'io.projectreactor:reactor-core'
	testImplementation libs.testcontainers
	testImplementation libs.testcontainersJunit
}
